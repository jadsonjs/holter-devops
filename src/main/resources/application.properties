###########################################
###  BASIC APPLICATION CONFIGURATION   ####
###########################################

application.name=holter-devops

#
# a url do frontend da aplicacao
# Exemplo em desenvolvimento: http://localhost:3000
#
application.url=${APPLICATION_URL}

#####################################
# App configuration
#####################################
server.servlet.context-path=/holter
server.port=8080
apiPrefix=/api

# Directory where cloned projects will be stored
projects.path=${PROJECTS_PATH}

#
# Used just to send by e-mail
# default value: http://localhost:8080/holter
#
app.url = http://localhost:8080/holter

#
# If the dashboard will remain public, or if we will require a login to access it
#
# In the case study we will use login to check information of specific users
# default = false
#
enable.login-page=false

#
# IF the tool will access each access to the dashboard, this can take a lot of space.
# default = false
#
log.dashboard-access=false

#
# For the study we will use just CI metric, after the study other metric will be unlocked to the company
# default = false
#
lock.no-ci-metrics=false

#
# We will send alert by e-mail when automatic collect execute.
# we will make this feature optional. let's see if they ask for it.
# default = true
#
send.email-alert=true


#
# Disable ssl verification ONLY if the CI server do not use HTTPS ou its certificate if invalid.
# Local Gitlab and Sonar instances
# default = false
#
disable.ssl-verification=false


#####################################
# Database configuration
#####################################

#
# Run the app in production
# java -jar holter.jar -DDATABASE_PATH=/data -DDATABASE_PASSWORD=xxxxxxxxx
#
spring.datasource.url=jdbc:h2:file:/${DATABASE_PATH}/holter_db;INIT=CREATE SCHEMA IF NOT EXISTS HOLTER
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=${DATABASE_PASSWORD}
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.show-sql=false

#
# enable sql console in local machine
# http://localhost:8080/holter/h2-console
#
spring.h2.console.enabled=true
spring.h2.console.settings.web-allow-others=true

#
# use the schema.sql file to create the database
#
spring.jpa.hibernate.ddl-auto=${HIBERNATE_DLL_AUTO}
spring.sql.init.mode=never


#####################################
# mail configuration
# it uses the ''app password'' as user password
#
# java -jar holter.jar -DDATABASE_PATH=/data -DDATABASE_PASSWORD=xxxxxxxxx -DMAIL_ACCOUNT=jadson.santos@gmail.com -DMAIL_PASSWORD=xxxx xxxx xxxx xxxx
#
# An app password is a 16-digit passcode that gives a less secure app or device permission to access your Google Account.
# App passwords can only be used with accounts that have 2-Step Verification turned on.
# https://support.google.com/accounts/answer/185833?hl=en
#####################################
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=${MAIL_ACCOUNT}
spring.mail.password=${MAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true
spring.mail.properties.mail.smtp.ssl.enable=false
spring.mail.test-connection=true


