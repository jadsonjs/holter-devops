<?xml version="1.0" encoding="UTF-8"?>
<configuration>

    <!-- Define directory where save the logs. by default "/tmp"  -->
    <property name="LOG_DIR"         value="${app.log.dir:-/tmp}" />
    <property name="LOG_PATTERN"     value="%d %p %C{1} [%t] %m%n" />
    <property name="MAX_FILE_SIZE"   value="10MB" />
    <property name="MAX_DAYS"        value="5" />
    <property name="TOTAL_FILE_SIZE" value="2GB" />
    <property name="APP_MAIN_CLASS"  value="br.ufrn.imd.baseimd.Application" />
    <property resource="application.properties"/>


    <!--
      == Appenders
      == Na arquitetura Logback, os Appenders são os elementos responsáveis por escrever as instruções de log.
      -->

    <!--
    == Configura como os Logs vão aparecer no Console
    -->
    <appender name="ConsoleAppender" class="ch.qos.logback.core.ConsoleAppender">
        <layout class="ch.qos.logback.classic.PatternLayout">
            <Pattern>
                %black(%d{ISO8601}) %highlight(%-5level) [%magenta(%t)] %yellow(%C{1}): %msg%n%throwable
            </Pattern>
        </layout>
    </appender>



    <!--
    == Configurações para o arquivo de Log de informações
    -->
    <appender name="AppInfoAppender" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_DIR}/${application.name}_info.log</file>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <Pattern>${LOG_PATTERN}</Pattern>
        </encoder>

        <!-- Exclude ERROR level of this file -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>DENY</onMatch>
            <onMismatch>ACCEPT</onMismatch>
        </filter>

        <!-- rollover daily and when the file reaches 10 MegaBytes -->
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${LOG_DIR}/archived/${application.name}_info-%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <maxFileSize>${MAX_FILE_SIZE}</maxFileSize>
            <maxHistory>${MAX_DAYS}</maxHistory>
        </rollingPolicy>
    </appender>


    <!--
    == Configurações para o arquivo de Log de error
    -->
    <appender name="AppErrorAppender" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_DIR}/${application.name}_error.log</file>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <Pattern>${LOG_PATTERN}</Pattern>
        </encoder>

        <!-- Exclude INFO and WORN level of this file -->
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>ERROR</level>
        </filter>


        <!-- rollover daily and when the file reaches 10 MegaBytes -->
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${LOG_DIR}/archived/${application.name}_error-%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <maxFileSize>${MAX_FILE_SIZE}</maxFileSize>
            <maxHistory>${MAX_DAYS}</maxHistory>
        </rollingPolicy>

    </appender>



    <!--
    == Configurações para o arquivo de Log de stack traces de erros
    -->
    <appender name="AppStackTraceAppender" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_DIR}/${application.name}_trace.log</file>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <Pattern>${LOG_PATTERN}</Pattern>
        </encoder>

        <!-- Exclude INFO and WORN level of this file -->
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>ERROR</level>
        </filter>


        <!-- rollover daily and when the file reaches 10 MegaBytes -->
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${LOG_DIR}/archived/${application.name}_trace-%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <maxFileSize>${MAX_FILE_SIZE}</maxFileSize>
            <maxHistory>${MAX_DAYS}</maxHistory>
        </rollingPolicy>
    </appender>


    <!--
    == Configurações para o arquivo de Log de request
    -->
    <appender name="AppRequestsAppender" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_DIR}/${application.name}_request.log</file>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <Pattern>${LOG_PATTERN}</Pattern>
        </encoder>

        <!-- Exclude ERROR level of this file -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>DENY</onMatch>
            <onMismatch>ACCEPT</onMismatch>
        </filter>


        <!-- rollover daily and when the file reaches 10 MegaBytes -->
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${LOG_DIR}/archived/${application.name}_request-%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <maxFileSize>${MAX_FILE_SIZE}</maxFileSize>
            <maxHistory>${MAX_DAYS}</maxHistory>
        </rollingPolicy>

    </appender>





    <!--
    == Logger
    == Componentes que os desenvolvedores podem usar para registrar mensagens em um determinado nível.
    -->



    <!--
    == to write to this log, load a specific context LoggerFactory.getLogger("StackTraceLogger");
    -->
    <logger name="StackTraceLogger" level="ERROR" additivity="false">
        <appender-ref ref="AppStackTraceAppender"/>
    </logger>

    <!--
    == to write to this log, load a specific context LoggerFactory.getLogger("AppErrorAppender");
    -->
    <logger name="ErrorLogger" level="ERROR" additivity="false" >
        <appender-ref ref="AppErrorAppender" />
    </logger>

    <!--
    == to write to this log, load a specific context LoggerFactory.getLogger("RequestLogger");
    -->
    <logger name="RequestLogger" level="INFO" additivity="false">
        <appender-ref ref="AppRequestsAppender"/>
    </logger>


    <!-- Os logs das classes do IMD vão para 3 lugares -->
    <logger name="br.ufrn.imd" level="INFO" additivity="false" >
        <appender-ref ref="AppErrorAppender" />
        <appender-ref ref="AppInfoAppender" />
        <appender-ref ref="ConsoleAppender" />
    </logger>

    <!-- Spring logs vão apenas para o console -->
    <logger name="org.springframework" level="INFO" additivity="false" >
        <appender-ref ref="ConsoleAppender" />
    </logger>

    <!-- Application startup log just to console -->
    <logger name="${APP_MAIN_CLASS}" level="INFO" additivity="false">
        <appender-ref ref="ConsoleAppender"/>
    </logger>


    <!--
     == The appender Console that was created is then referenced in the root logger.
     ==  Causing it to only output messages that are defined at log level INFO or above (INFO, WARN, ERROR).
     -->
    <root level="INFO" additivity="false">
        <appender-ref ref="ConsoleAppender" />
    </root>


</configuration>